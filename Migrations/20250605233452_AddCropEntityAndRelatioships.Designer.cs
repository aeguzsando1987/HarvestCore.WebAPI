// <auto-generated />
using System;
using HarvestCore.WebApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HarvestCore.WebApi.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250605233452_AddCropEntityAndRelatioships")]
    partial class AddCropEntityAndRelatioships
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HarvestCore.WebApi.Entites.Community", b =>
                {
                    b.Property<int>("IdCommunity")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCommunity"));

                    b.Property<string>("CityName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CommunityKey")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<int>("IdState")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdCommunity");

                    b.HasIndex("CommunityKey")
                        .IsUnique();

                    b.HasIndex("IdState");

                    b.ToTable("Communities");
                });

            modelBuilder.Entity("HarvestCore.WebApi.Entites.Country", b =>
                {
                    b.Property<int>("IdCountry")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCountry"));

                    b.Property<string>("CountryCode")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdCountry");

                    b.HasIndex("CountryCode")
                        .IsUnique();

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("HarvestCore.WebApi.Entites.Crew", b =>
                {
                    b.Property<int>("IdCrew")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCrew"));

                    b.Property<string>("Community")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CrewKey")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<int>("IdCommunity")
                        .HasColumnType("int");

                    b.Property<string>("ResponsibleName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdCrew");

                    b.HasIndex("CrewKey")
                        .IsUnique();

                    b.HasIndex("IdCommunity");

                    b.ToTable("Crews");
                });

            modelBuilder.Entity("HarvestCore.WebApi.Entites.Crop", b =>
                {
                    b.Property<int>("IdCrop")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCrop"));

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CropKey")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Season")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Variety")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdCrop");

                    b.HasIndex("CropKey")
                        .IsUnique();

                    b.ToTable("Crops");
                });

            modelBuilder.Entity("HarvestCore.WebApi.Entites.Harvest", b =>
                {
                    b.Property<int>("IdHarvest")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdHarvest"));

                    b.Property<string>("HarvestKey")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("IdCrop")
                        .HasColumnType("int");

                    b.Property<int>("IdHarvester")
                        .HasColumnType("int");

                    b.Property<int>("IdMacroTunnel")
                        .HasColumnType("int");

                    b.Property<byte[]>("Photo")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("QualityLevel")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("TransDate")
                        .HasColumnType("datetime2");

                    b.Property<float>("Weight")
                        .HasColumnType("real");

                    b.HasKey("IdHarvest");

                    b.HasIndex("HarvestKey")
                        .IsUnique();

                    b.HasIndex("IdCrop");

                    b.HasIndex("IdHarvester");

                    b.HasIndex("IdMacroTunnel");

                    b.ToTable("Harvests");
                });

            modelBuilder.Entity("HarvestCore.WebApi.Entites.HarvestTable", b =>
                {
                    b.Property<int>("IdHarvestTable")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdHarvestTable"));

                    b.Property<string>("HarvestTableKey")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("IdHarvestTable");

                    b.ToTable("HarvestTables");
                });

            modelBuilder.Entity("HarvestCore.WebApi.Entites.Harvester", b =>
                {
                    b.Property<int>("IdHarvester")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdHarvester"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("Encoder")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("HarvesterKey")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("IdCrew")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<byte[]>("Photo")
                        .HasColumnType("varbinary(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("IdHarvester");

                    b.HasIndex("HarvesterKey")
                        .IsUnique();

                    b.HasIndex("IdCrew");

                    b.ToTable("Harvesters");
                });

            modelBuilder.Entity("HarvestCore.WebApi.Entites.LookupItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("LookupItems");
                });

            modelBuilder.Entity("HarvestCore.WebApi.Entites.MacroTunnel", b =>
                {
                    b.Property<int>("IdMacroTunnel")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdMacroTunnel"));

                    b.Property<int>("IdHarvestTable")
                        .HasColumnType("int");

                    b.Property<string>("MacroTunnelKey")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("WalkwayNumber")
                        .HasColumnType("int");

                    b.HasKey("IdMacroTunnel");

                    b.HasIndex("IdHarvestTable");

                    b.HasIndex("MacroTunnelKey")
                        .IsUnique();

                    b.ToTable("MacroTunnels");
                });

            modelBuilder.Entity("HarvestCore.WebApi.Entites.State", b =>
                {
                    b.Property<int>("IdState")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdState"));

                    b.Property<int>("IdCountry")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("StateCode")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.HasKey("IdState");

                    b.HasIndex("IdCountry");

                    b.HasIndex("StateCode")
                        .IsUnique();

                    b.ToTable("States");
                });

            modelBuilder.Entity("HarvestCore.WebApi.Entites.Community", b =>
                {
                    b.HasOne("HarvestCore.WebApi.Entites.State", "State")
                        .WithMany("Communities")
                        .HasForeignKey("IdState")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("State");
                });

            modelBuilder.Entity("HarvestCore.WebApi.Entites.Crew", b =>
                {
                    b.HasOne("HarvestCore.WebApi.Entites.Community", "CommunityEntity")
                        .WithMany("Crews")
                        .HasForeignKey("IdCommunity")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CommunityEntity");
                });

            modelBuilder.Entity("HarvestCore.WebApi.Entites.Harvest", b =>
                {
                    b.HasOne("HarvestCore.WebApi.Entites.Crop", "CropEntity")
                        .WithMany("Harvests")
                        .HasForeignKey("IdCrop")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("HarvestCore.WebApi.Entites.Harvester", "HarvesterEntity")
                        .WithMany("Harvests")
                        .HasForeignKey("IdHarvester")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("HarvestCore.WebApi.Entites.MacroTunnel", "MacroTunnelEntity")
                        .WithMany("Harvests")
                        .HasForeignKey("IdMacroTunnel")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CropEntity");

                    b.Navigation("HarvesterEntity");

                    b.Navigation("MacroTunnelEntity");
                });

            modelBuilder.Entity("HarvestCore.WebApi.Entites.Harvester", b =>
                {
                    b.HasOne("HarvestCore.WebApi.Entites.Crew", "CrewEntity")
                        .WithMany("Harvesters")
                        .HasForeignKey("IdCrew")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CrewEntity");
                });

            modelBuilder.Entity("HarvestCore.WebApi.Entites.MacroTunnel", b =>
                {
                    b.HasOne("HarvestCore.WebApi.Entites.HarvestTable", "HarvestTable")
                        .WithMany("MacroTunnels")
                        .HasForeignKey("IdHarvestTable")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HarvestTable");
                });

            modelBuilder.Entity("HarvestCore.WebApi.Entites.State", b =>
                {
                    b.HasOne("HarvestCore.WebApi.Entites.Country", "Country")
                        .WithMany("States")
                        .HasForeignKey("IdCountry")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("HarvestCore.WebApi.Entites.Community", b =>
                {
                    b.Navigation("Crews");
                });

            modelBuilder.Entity("HarvestCore.WebApi.Entites.Country", b =>
                {
                    b.Navigation("States");
                });

            modelBuilder.Entity("HarvestCore.WebApi.Entites.Crew", b =>
                {
                    b.Navigation("Harvesters");
                });

            modelBuilder.Entity("HarvestCore.WebApi.Entites.Crop", b =>
                {
                    b.Navigation("Harvests");
                });

            modelBuilder.Entity("HarvestCore.WebApi.Entites.HarvestTable", b =>
                {
                    b.Navigation("MacroTunnels");
                });

            modelBuilder.Entity("HarvestCore.WebApi.Entites.Harvester", b =>
                {
                    b.Navigation("Harvests");
                });

            modelBuilder.Entity("HarvestCore.WebApi.Entites.MacroTunnel", b =>
                {
                    b.Navigation("Harvests");
                });

            modelBuilder.Entity("HarvestCore.WebApi.Entites.State", b =>
                {
                    b.Navigation("Communities");
                });
#pragma warning restore 612, 618
        }
    }
}
